{"version":3,"sources":["components/PeopleTable.module.css","redux/reducers/people/action.js","redux/reducers/people/index.js","redux/reducers/peopleDetails/action.js","redux/reducers/peopleDetails/index.js","redux/reducers/index.js","redux/reducers/people/selector.js","components/PeopleTablePagination.js","components/PeopleTable.js","pages/App.js","redux/reducers/peopleDetails/selectors.js","pages/Details.js","routes/index.js","redux/sagas/people/index.js","redux/sagas/index.js","redux/index.js","index.js"],"names":["module","exports","LOAD_USERS","LOAD_USERS_SUCCESS","LOAD_USERS_FAILURE","initialStatePeople","page","search","loading","error","data","LOAD_DETAILS","LOAD_DETAILS_SUCCESS","LOAD_DETAILS_FAILURE","initialPeopleDetails","history","createBrowserHistory","initial","rootReducer","combineReducers","app","state","people","type","payload","peopleDetails","router","connectRouter","getPeople","PeopleTablePagination","total","onChange","totalPages","Math","ceil","className","s","pagination","Array","from","length","_","index","map","pageIndex","action","item","onClick","PeopleTable","useSelector","dispatch","useDispatch","style","display","padding","marginBottom","value","e","target","placeholder","border","width","cellPadding","cellSpacing","results","name","birth_year","eye_color","gender","hair_color","height","id","url","replaceAll","to","count","newPage","App","getPeopleDetails","Details","MAIN_ROUTE","PEOPLE_DETAILS_ROUTE","routes","path","exact","component","skin_color","mass","getRouteConfig","route","find","r","Routes","props","loadPeopleDetails","loadPeopleList","routeChangeSaga","peopleSaga","call","fetch","request","apply","json","put","take","LOCATION_CHANGE","matchPath","location","pathname","select","detailsPage","params","fork","takeEvery","rootSaga","sagas","all","spawn","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","routerMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f660ac8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"PeopleTable_pagination__uFsG_\",\"item\":\"PeopleTable_item__2UBAa\"};","export const LOAD_USERS = 'LOAD_USERS';\r\nexport const LOAD_USERS_SUCCESS = 'LOAD_USERS_SUCCESS';\r\nexport const LOAD_USERS_FAILURE = 'LOAD_USERS_FAILURE';\r\n","import { LOAD_USERS, LOAD_USERS_FAILURE, LOAD_USERS_SUCCESS } from './action';\r\n\r\nconst initialStatePeople = {\r\n    page: 1,\r\n    search: '',\r\n    loading: false,\r\n    error: null,\r\n    data: null,\r\n};\r\n\r\nexport default function peopleReducer(\r\n    state = initialStatePeople,\r\n    { type, payload },\r\n) {\r\n    switch (type) {\r\n        case LOAD_USERS:\r\n            const { page, search } = payload;\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                page,\r\n                search,\r\n            };\r\n\r\n        case LOAD_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: payload,\r\n                error: null,\r\n            };\r\n\r\n        case LOAD_USERS_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const LOAD_DETAILS = 'LOAD_DETAILS';\r\nexport const LOAD_DETAILS_SUCCESS = 'LOAD_DETAILS_SUCCESS';\r\nexport const LOAD_DETAILS_FAILURE = 'LOAD_DETAILS_FAILURE';\r\n","import {\r\n    LOAD_DETAILS,\r\n    LOAD_DETAILS_FAILURE,\r\n    LOAD_DETAILS_SUCCESS,\r\n} from './action';\r\n\r\nconst initialPeopleDetails = {\r\n    loading: false,\r\n    error: null,\r\n    data: null,\r\n};\r\n\r\nexport default function peopleDetailsReducer(\r\n    state = initialPeopleDetails,\r\n    { type, payload },\r\n) {\r\n    switch (type) {\r\n        case LOAD_DETAILS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n\r\n        case LOAD_DETAILS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: payload,\r\n                error: null,\r\n            };\r\n\r\n        case LOAD_DETAILS_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport peopleReducer from './people';\nimport peopleDetailsReducer from './peopleDetails';\n\nexport const history = createBrowserHistory();\n\nconst initial = {};\n\nexport function appReducer(state = initial, action) {\n    return state;\n}\n\nconst rootReducer = combineReducers({\n    app: appReducer,\n    people: peopleReducer,\n    peopleDetails: peopleDetailsReducer,\n    router: connectRouter(history),\n});\n\nexport default rootReducer;\n","export const getPeople = state => state.people;\r\n","import s from './PeopleTable.module.css';\r\nconst LIMIT = 10;\r\n\r\nfunction PeopleTablePagination({ page, total, onChange = () => {} }) {\r\n    const totalPages = Math.ceil(total / LIMIT);\r\n\r\n    return (\r\n        <div className={s.pagination}>\r\n            {Array.from({ length: totalPages }, (_, index) => index + 1).map(\r\n                pageIndex => {\r\n                    const isActive = pageIndex === page;\r\n                    const action = () => {\r\n                        if (pageIndex !== page) onChange(pageIndex);\r\n                    };\r\n                    return isActive ? (\r\n                        <b className={s.item} key={pageIndex} onClick={action}>\r\n                            {' '}\r\n                            {pageIndex}{' '}\r\n                        </b>\r\n                    ) : (\r\n                        <span\r\n                            className={s.item}\r\n                            key={pageIndex}\r\n                            onClick={action}\r\n                        >\r\n                            {' '}\r\n                            {pageIndex}{' '}\r\n                        </span>\r\n                    );\r\n                },\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PeopleTablePagination;\r\n","import { LOAD_USERS } from '../redux/reducers/people/action';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPeople } from '../redux/reducers/people/selector';\r\nimport PeopleTablePagination from './PeopleTablePagination';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PeopleTable() {\r\n    const { loading, data, page, search } = useSelector(getPeople);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const changePage = newPage =>\r\n        dispatch({\r\n            type: LOAD_USERS,\r\n            payload: { page: newPage, search: search },\r\n        });\r\n\r\n    const handlerSearch = e =>\r\n        dispatch({\r\n            type: LOAD_USERS,\r\n            payload: { page: 1, search: e.target.value },\r\n        });\r\n\r\n    return (\r\n        <>\r\n            <h1>Star Wars People</h1>\r\n            <form style={{ display: 'inline-block' }}>\r\n                <input\r\n                    style={{ padding: '5px', marginBottom: '20px' }}\r\n                    type=\"text\"\r\n                    value={search}\r\n                    onChange={handlerSearch}\r\n                    placeholder=\"Search people...\"\r\n                />\r\n            </form>\r\n            {loading ? (\r\n                <div>Loading...</div>\r\n            ) : (\r\n                <>\r\n                    <table\r\n                        border={1}\r\n                        width=\"100%\"\r\n                        cellPadding={2}\r\n                        cellSpacing={0}\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Birth Year</th>\r\n                                <th>Eye Color</th>\r\n                                <th>Gender</th>\r\n                                <th>Hair Color</th>\r\n                                <th>Height</th>\r\n                                <th />\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data?.results.map(\r\n                                ({\r\n                                    name,\r\n                                    birth_year,\r\n                                    eye_color,\r\n                                    gender,\r\n                                    hair_color,\r\n                                    height,\r\n                                    url,\r\n                                }) => {\r\n                                    const id = url.replaceAll(/\\D/g, '');\r\n                                    return (\r\n                                        <tr key={name}>\r\n                                            <td>{name}</td>\r\n                                            <td>{birth_year}</td>\r\n                                            <td>{eye_color}</td>\r\n                                            <td>{gender}</td>\r\n                                            <td>{hair_color}</td>\r\n                                            <td>{height}</td>\r\n                                            <td>\r\n                                                <Link to={`/people/${id}`}>\r\n                                                    Details\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                },\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <PeopleTablePagination\r\n                        page={page}\r\n                        total={data.count}\r\n                        onChange={changePage}\r\n                    />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PeopleTable;\r\n","import PeopleTable from '../components/PeopleTable';\n\nfunction App() {\n    return <PeopleTable />;\n}\n\nexport default App;\n","export const getPeopleDetails = state => state.peopleDetails;\r\n","import { useSelector } from 'react-redux';\r\nimport { getPeopleDetails } from '../redux/reducers/peopleDetails/selectors';\r\nfunction Details() {\r\n    const { loading, data } = useSelector(getPeopleDetails);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    const { birth_year, name, skin_color, mass } = data;\r\n\r\n    return (\r\n        <div>\r\n            <h1>{name}</h1>\r\n            <h4>{birth_year}</h4>\r\n            <p>Skin: {skin_color}</p>\r\n            <p>Mass: {mass}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Details;\r\n","import { Route, Switch } from 'react-router-dom';\r\nimport App from '../pages/App';\r\nimport Details from '../pages/Details';\r\n\r\nexport const MAIN_ROUTE = 'MAIN_ROUTE';\r\nexport const PEOPLE_DETAILS_ROUTE = 'PEOPLE_DETAILS_ROUTE';\r\n\r\nconst routes = [\r\n    {\r\n        id: MAIN_ROUTE,\r\n        path: '/',\r\n        exact: true,\r\n        component: App,\r\n    },\r\n    {\r\n        id: PEOPLE_DETAILS_ROUTE,\r\n        path: '/people/:id',\r\n        exact: true,\r\n        component: Details,\r\n    },\r\n];\r\n\r\nexport const getRouteConfig = id => {\r\n    const route = routes.find(r => r.id === id);\r\n\r\n    if (route) {\r\n        const { component, ...rest } = route;\r\n        return rest;\r\n    }\r\n};\r\n\r\nfunction Routes() {\r\n    return (\r\n        <Switch>\r\n            {routes.map(r => {\r\n                const { id, ...props } = r;\r\n                return <Route key={id} {...props} />;\r\n            })}\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import { LOCATION_CHANGE } from 'connected-react-router';\r\nimport { matchPath } from 'react-router-dom';\r\nimport {\r\n    call,\r\n    apply,\r\n    put,\r\n    takeEvery,\r\n    take,\r\n    select,\r\n    fork,\r\n} from 'redux-saga/effects';\r\nimport { LOAD_USERS, LOAD_USERS_SUCCESS } from '../../reducers/people/action';\r\nimport { getPeople } from '../../reducers/people/selector';\r\nimport {\r\n    getRouteConfig,\r\n    MAIN_ROUTE,\r\n    PEOPLE_DETAILS_ROUTE,\r\n} from '../../../routes';\r\nimport {\r\n    LOAD_DETAILS,\r\n    LOAD_DETAILS_FAILURE,\r\n    LOAD_DETAILS_SUCCESS,\r\n} from '../../reducers/peopleDetails/action';\r\n\r\nfunction* loadPeopleDetails({ payload }) {\r\n    const { id } = payload;\r\n\r\n    try {\r\n        const request = yield call(fetch, `https://swapi.dev/api/people/${id}`);\r\n        const data = yield apply(request, request.json);\r\n        yield put({ type: LOAD_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        yield put({ type: LOAD_DETAILS_FAILURE, payload: error });\r\n    }\r\n}\r\n\r\nfunction* loadPeopleList({ payload }) {\r\n    const { page, search } = payload;\r\n    const request = yield call(\r\n        fetch,\r\n        `https://swapi.dev/api/people?page=${page}&search=${search}`,\r\n    );\r\n\r\n    const data = yield apply(request, request.json);\r\n\r\n    yield put({ type: LOAD_USERS_SUCCESS, payload: data });\r\n}\r\n\r\nfunction* routeChangeSaga() {\r\n    while (true) {\r\n        const action = yield take(LOCATION_CHANGE);\r\n\r\n        if (\r\n            matchPath(\r\n                action.payload.location.pathname,\r\n                getRouteConfig(MAIN_ROUTE),\r\n            )\r\n        ) {\r\n            const { page, search } = yield select(getPeople);\r\n\r\n            yield put({\r\n                type: LOAD_USERS,\r\n                payload: {\r\n                    page,\r\n                    search,\r\n                },\r\n            });\r\n        }\r\n\r\n        const detailsPage = matchPath(\r\n            action.payload.location.pathname,\r\n            getRouteConfig(PEOPLE_DETAILS_ROUTE),\r\n        );\r\n\r\n        if (detailsPage) {\r\n            const { id } = detailsPage.params;\r\n\r\n            if (id) {\r\n                yield put({\r\n                    type: LOAD_DETAILS,\r\n                    payload: {\r\n                        id,\r\n                    },\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default function* peopleSaga() {\r\n    yield fork(routeChangeSaga);\r\n    yield takeEvery(LOAD_USERS, loadPeopleList);\r\n    yield takeEvery(LOAD_DETAILS, loadPeopleDetails);\r\n}\r\n","import { all, spawn } from 'redux-saga/effects';\nimport peopleSaga from './people';\n\nexport default function* rootSaga() {\n    const sagas = [peopleSaga];\n\n    yield all(sagas.map(s => spawn(s)));\n}\n","import {createStore, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {routerMiddleware} from 'connected-react-router'\nimport reducer, {history} from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(\n        applyMiddleware(\n            routerMiddleware(history),\n            sagaMiddleware,\n        )\n    )\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport store from './redux';\nimport { history } from './redux/reducers';\nimport Routes from './routes';\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <Routes />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}